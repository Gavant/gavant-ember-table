import { setComponentTemplate } from '@ember/component';
import { hbs } from 'ember-cli-htmlbars';
import EmberTbody from 'ember-table/components/ember-tbody/component';

var TEMPLATE = hbs("{{! template-lint-disable  }}\n{{#if (and @showTopLoading @isLoading)}}\n    <Row::Loading @columns={{this.columns}} />\n{{/if}}\n{{#vertical-collection\n    this.wrappedRows\n    containerSelector=this._containerSelector\n    estimateHeight=this.estimateRowHeight\n    key=this.key\n    staticHeight=this.staticHeight\n    bufferSize=this.bufferSize\n    renderAll=this.renderAll\n    firstReached=this.firstReached\n    lastReached=this.lastReached\n    firstVisibleChanged=this.firstVisibleChanged\n    lastVisibleChanged=this.lastVisibleChanged\n    idForFirstItem=this.idForFirstItem\n    as |rowValue|\n}}\n    {{#-ember-table-private/row-wrapper\n        rowValue=rowValue\n        columns=this.columns\n        columnMetaCache=this.columnMetaCache\n        rowMetaCache=this.rowMetaCache\n        canSelect=this.canSelect\n        rowSelectionMode=this.rowSelectionMode\n        checkboxSelectionMode=this.checkboxSelectionMode\n        rowToggleMode=this.rowToggleMode\n        rowsCount=this.wrappedRows.length\n        as |api|\n    }}\n        {{#if (has-block)}}\n            {{yield\n                (hash\n                    rowValue=api.rowValue\n                    rowMeta=api.rowMeta\n                    cells=api.cells\n                    rowSelectionMode=api.rowSelectionMode\n                    rowsCount=api.rowsCount\n                    row=(component @rowComponent api=api tableMeta=@tableMeta)\n                )\n            }}\n        {{else}}\n            {{ember-tr api=api}}\n        {{/if}}\n    {{/-ember-table-private/row-wrapper}}\n{{else if this.shouldYieldToInverse}}\n    {{yield to=\"inverse\"}}\n{{/vertical-collection}}\n{{#if (and @showBottomLoading @isLoading)}}\n    <Row::Loading @columns={{this.columns}} />\n{{/if}}\n{{#if @isEmpty}}\n    <Row::NoResults @columns={{this.columns}} @noResultsText={{@noResultsText}} />\n{{/if}}");

class EmberTbodyComponent extends EmberTbody {}
setComponentTemplate(TEMPLATE, EmberTbodyComponent);

export { EmberTbodyComponent as default };

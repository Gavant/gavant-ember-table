"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const walk_sync_1 = __importDefault(require("walk-sync"));
const fs_1 = require("fs");
const path_1 = require("path");
const minimatch_1 = __importDefault(require("minimatch"));
function keepAssets({ from, include, }) {
    return {
        name: 'copy-assets',
        // imports of assets should be left alone in the source code. This can cover
        // the case of .css as defined in the embroider v2 addon spec.
        async resolveId(source, importer, options) {
            const resolution = await this.resolve(source, importer, {
                skipSelf: true,
                ...options,
            });
            if (resolution &&
                include.some((pattern) => (0, minimatch_1.default)(resolution.id, pattern))) {
                return { id: source, external: true };
            }
            return resolution;
        },
        // the assets go into the output directory in the same relative locations as
        // in the input directory
        async generateBundle() {
            for (let name of (0, walk_sync_1.default)(from, {
                globs: include,
                directories: false,
            })) {
                this.emitFile({
                    type: 'asset',
                    fileName: name,
                    source: (0, fs_1.readFileSync)((0, path_1.join)(from, name), 'utf8'),
                });
            }
        },
    };
}
exports.default = keepAssets;
//# sourceMappingURL=rollup-keep-assets.js.map
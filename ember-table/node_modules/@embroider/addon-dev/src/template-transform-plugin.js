"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const babel_plugin_stage1_inline_hbs_1 = __importDefault(require("@embroider/core/src/babel-plugin-stage1-inline-hbs"));
const core_1 = require("@embroider/core");
const load_ember_template_compiler_1 = require("@embroider/core/src/load-ember-template-compiler");
function resolvePlugins(plugins) {
    return plugins.map((somePlugin) => {
        // If it's a string attempt to resolve the path to a module.
        return typeof somePlugin === 'string'
            ? require(somePlugin) // eslint-disable-line @typescript-eslint/no-require-imports
            : somePlugin;
    });
}
exports.default = (0, babel_plugin_stage1_inline_hbs_1.default)((options) => {
    let { astTransforms: somePlugins = [], compilerPath = 'ember-source/dist/ember-template-compiler', } = options;
    compilerPath = require.resolve(compilerPath);
    const astTransforms = resolvePlugins(somePlugins);
    const params = {
        EmberENV: {},
        loadEmberTemplateCompiler: () => (0, load_ember_template_compiler_1.getEmberExports)(compilerPath),
        plugins: {
            ast: astTransforms,
        },
    };
    return new core_1.TemplateCompiler(params);
});
//# sourceMappingURL=template-transform-plugin.js.map
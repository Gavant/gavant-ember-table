{"version":3,"file":"commands.js","sourceRoot":"","sources":["commands.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { ensureSymlinkSync, readJSONSync, writeJSONSync } from 'fs-extra';\nimport { join } from 'path';\nimport yargs from 'yargs/yargs';\nimport type { Argv } from 'yargs';\n\nfunction commonArgs(yargs: Argv) {\n  return yargs\n    .option('testAppDir', {\n      type: 'string',\n      description: 'Path to the test app',\n      default: 'test-app',\n    })\n    .option('addonDir', {\n      type: 'string',\n      description: 'Path to your addon',\n      default: process.cwd(),\n    });\n}\n\nyargs(process.argv.slice(2))\n  .scriptName('addon-dev')\n  .command(\n    'link-test-app',\n    'Ensures that a test app (that lives a subdir under an addon) has access to the addon and all appropriate deps',\n    (yargs) => commonArgs(yargs),\n    function (opts) {\n      let { testAppDir, addonDir } = opts;\n      ensureSymlinkSync(\n        join(addonDir, 'node_modules', '.bin'),\n        join(testAppDir, 'node_modules', '.bin'),\n        'dir'\n      );\n      ensureSymlinkSync(\n        addonDir,\n        join(\n          testAppDir,\n          'node_modules',\n          readJSONSync(join(addonDir, 'package.json')).name\n        )\n      );\n    }\n  )\n  .command(\n    'sync-dev-deps',\n    `Synchronizes a test app's devDependencies into the parent addon's devDependencies`,\n    (yargs) => {\n      return commonArgs(yargs).option('lint', {\n        type: 'boolean',\n        description:\n          'Instead of modifying package.json, print what would have been modified and exit with a failure if any changes are required.',\n        default: false,\n      });\n    },\n    function (opts) {\n      let { testAppDir, addonDir, lint } = opts;\n      let addonPkg = readJSONSync(join(addonDir, 'package.json'));\n      let testPkg = readJSONSync(join(testAppDir, 'package.json'));\n      let foundDifferences = false;\n      let devDeps: { [name: string]: string } = Object.assign(\n        {},\n        addonPkg.devDependencies\n      );\n      for (let [name, range] of Object.entries(\n        testPkg.devDependencies as { [name: string]: string }\n      )) {\n        if (name === addonPkg.name) {\n          continue;\n        }\n        if (devDeps[name] !== range) {\n          foundDifferences = true;\n          if (lint) {\n            console.error(\n              `test app depends on ${name} ${range} but that is not present in addon's devDependencies package.json`\n            );\n          } else {\n            devDeps[name] = range;\n          }\n        }\n      }\n      if (!foundDifferences) {\n        return;\n      }\n      if (lint) {\n        process.exit(-1);\n      } else {\n        addonPkg.devDependencies = devDeps;\n        writeJSONSync(join(addonDir, 'package.json'), addonPkg, { spaces: 2 });\n      }\n    }\n  )\n  .demandCommand()\n  .strictCommands()\n  .help().argv;\n"]}
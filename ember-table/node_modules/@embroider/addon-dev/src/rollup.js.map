{"version":3,"file":"rollup.js","sourceRoot":"","sources":["rollup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,4EAAqD;AACrD,4FAA2E;AAC3E,kFAAiE;AACjE,gFAAwD;AACxD,8EAA6D;AAC7D,4FAAsE;AAGtE,MAAa,KAAK;IAIhB,YAAY,SAAgD,EAAE;;QAH9D,gCAAgB;QAChB,iCAAiB;QAGf,uBAAA,IAAI,iBAAW,MAAA,MAAM,CAAC,MAAM,mCAAI,KAAK,MAAA,CAAC;QACtC,uBAAA,IAAI,kBAAY,MAAA,MAAM,CAAC,OAAO,mCAAI,MAAM,MAAA,CAAC;IAC3C,CAAC;IAED,0EAA0E;IAC1E,yEAAyE;IACzE,0CAA0C;IAC1C,YAAY,CACV,QAAkB,EAClB,OAAuD,EAAE;QAEzD,OAAO,IAAA,8BAAY,EAAC;YAClB,IAAI,EAAE,uBAAA,IAAI,qBAAQ;YAClB,EAAE,EAAE,uBAAA,IAAI,sBAAS;YACjB,OAAO,EAAE,QAAQ;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,0EAA0E;IAC1E,+EAA+E;IAC/E,iBAAiB,CAAC,QAAkB;QAClC,OAAO,IAAA,mCAAiB,EAAC,EAAE,MAAM,EAAE,uBAAA,IAAI,qBAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,oEAAoE;IACpE,sEAAsE;IACtE,8DAA8D;IAC9D,GAAG;QACD,OAAO,IAAA,2BAAG,GAAE,CAAC;IACf,CAAC;IAED,6EAA6E;IAC7E,aAAa;IACb,KAAK;QACH,OAAO,IAAA,8BAAK,EAAC,EAAE,OAAO,EAAE,GAAG,uBAAA,IAAI,sBAAS,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,4EAA4E;IAC5E,6EAA6E;IAC7E,6EAA6E;IAC7E,UAAU;IACV,UAAU,CAAC,QAAkB;QAC3B,OAAO,IAAA,4BAAU,EAAC;YAChB,IAAI,EAAE,uBAAA,IAAI,qBAAQ;YAClB,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;IACL,CAAC;IAED,8EAA8E;IAC9E,2EAA2E;IAC3E,4EAA4E;IAC5E,UAAU;IACV,MAAM;QACJ,OAAO,EAAE,GAAG,EAAE,uBAAA,IAAI,sBAAS,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC;IACxE,CAAC;IAED,YAAY;QACV,OAAO,IAAA,mCAAY,GAAE,CAAC;IACxB,CAAC;CACF;AAlED,sBAkEC","sourcesContent":["import { default as hbs } from './rollup-hbs-plugin';\nimport { default as publicEntrypoints } from './rollup-public-entrypoints';\nimport { default as appReexports } from './rollup-app-reexports';\nimport { default as clean } from 'rollup-plugin-delete';\nimport { default as keepAssets } from './rollup-keep-assets';\nimport { default as dependencies } from './rollup-addon-dependencies';\nimport type { Plugin } from 'rollup';\n\nexport class Addon {\n  #srcDir: string;\n  #destDir: string;\n\n  constructor(params: { srcDir?: string; destDir?: string } = {}) {\n    this.#srcDir = params.srcDir ?? 'src';\n    this.#destDir = params.destDir ?? 'dist';\n  }\n\n  // Given a list of globs describing modules in your srcDir, this generates\n  // corresponding appTree modules that contain reexports, and updates your\n  // package.json metadata to list them all.\n  appReexports(\n    patterns: string[],\n    opts: { mapFilename?: (fileName: string) => string } = {}\n  ): Plugin {\n    return appReexports({\n      from: this.#srcDir,\n      to: this.#destDir,\n      include: patterns,\n      mapFilename: opts.mapFilename,\n    });\n  }\n\n  // This configures rollup to emit public entrypoints for each module in your\n  // srcDir that matches one of the given globs. Typical addons will want to\n  // match patterns like \"components/**/*.js\", \"index.js\", and \"test-support.js\".\n  publicEntrypoints(patterns: string[]) {\n    return publicEntrypoints({ srcDir: this.#srcDir, include: patterns });\n  }\n\n  // This wraps standalone .hbs files as Javascript files using inline\n  // templates. This means special resolving rules for .hbs files aren't\n  // required for javascript tooling to understand your package.\n  hbs() {\n    return hbs();\n  }\n\n  // By default rollup does not clear the output directory between builds. This\n  // does that.\n  clean() {\n    return clean({ targets: `${this.#destDir}/*` });\n  }\n\n  // V2 Addons are allowed to contain imports of .css files. This tells rollup\n  // to leave those imports alone and to make sure the corresponding .css files\n  // are kept in the same relative locations in the destDir as they were in the\n  // srcDir.\n  keepAssets(patterns: string[]) {\n    return keepAssets({\n      from: this.#srcDir,\n      include: patterns,\n    });\n  }\n\n  // This is the default `output` configuration you should pass to rollup. We're\n  // emitting ES modules, in your `destDir`, and their filenames are equal to\n  // their bundle names (the bundle names get generated by `publicEntrypoints`\n  // above).\n  output() {\n    return { dir: this.#destDir, format: 'es', entryFileNames: '[name]' };\n  }\n\n  dependencies() {\n    return dependencies();\n  }\n}\n"]}
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = require("fs-extra");
const core_1 = require("@embroider/core");
const compilationModules = new Set(core_1.templateCompilationModules.map((m) => m.module));
function resolvableDependencies() {
    let deps = new Set();
    let pkg = (0, fs_extra_1.readJsonSync)('package.json');
    if (pkg.dependencies) {
        for (let name of Object.keys(pkg.dependencies)) {
            deps.add(name);
        }
    }
    if (pkg.peerDependencies) {
        for (let name of Object.keys(pkg.peerDependencies)) {
            deps.add(name);
        }
    }
    return deps;
}
function emberExternals() {
    let deps = resolvableDependencies();
    return {
        name: 'ember-externals',
        async resolveId(source) {
            let pkgName = (0, core_1.packageName)(source);
            if (!pkgName) {
                // No package name found means this is a relative import, which we don't
                // need to deal with.
                return;
            }
            if (deps.has(pkgName) ||
                core_1.emberVirtualPeerDeps.has(pkgName) ||
                core_1.emberVirtualPackages.has(pkgName) ||
                compilationModules.has(pkgName)) {
                return { id: source, external: true };
            }
        },
    };
}
exports.default = emberExternals;
//# sourceMappingURL=rollup-addon-dependencies.js.map
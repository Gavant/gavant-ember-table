"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const minimatch_1 = __importDefault(require("minimatch"));
function appReexports(opts) {
    return {
        name: 'app-reexports',
        generateBundle(_, bundle) {
            var _a, _b;
            let pkg = (0, fs_extra_1.readJsonSync)('package.json');
            let appJS = {};
            for (let addonFilename of Object.keys(bundle)) {
                let appFilename = (_b = (_a = opts.mapFilename) === null || _a === void 0 ? void 0 : _a.call(opts, addonFilename)) !== null && _b !== void 0 ? _b : addonFilename;
                if (opts.include.some((glob) => (0, minimatch_1.default)(addonFilename, glob)) &&
                    !(0, minimatch_1.default)(addonFilename, '**/*.d.ts')) {
                    appJS[`./${appFilename}`] = `./dist/_app_/${appFilename}`;
                    this.emitFile({
                        type: 'asset',
                        fileName: `_app_/${appFilename}`,
                        source: `export { default } from "${pkg.name}/${addonFilename.slice(0, -(0, path_1.extname)(addonFilename).length)}";\n`,
                    });
                }
            }
            pkg['ember-addon'] = Object.assign({}, pkg['ember-addon'], {
                'app-js': appJS,
            });
            (0, fs_extra_1.writeJsonSync)('package.json', pkg, { spaces: 2 });
        },
    };
}
exports.default = appReexports;
//# sourceMappingURL=rollup-app-reexports.js.map